// <auto-generated />
using System;
using Kata.Wallet.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kata.Wallet.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250404142714_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kata.Wallet.Domain.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WalletIncomingId")
                        .HasColumnType("int");

                    b.Property<int>("WalletOutgoingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WalletIncomingId");

                    b.HasIndex("WalletOutgoingId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Kata.Wallet.Domain.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Balance")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("UserDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("Kata.Wallet.Domain.Transaction", b =>
                {
                    b.HasOne("Kata.Wallet.Domain.Wallet", "WalletIncoming")
                        .WithMany("IncomingTransactions")
                        .HasForeignKey("WalletIncomingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kata.Wallet.Domain.Wallet", "WalletOutgoing")
                        .WithMany("OutgoingTransactions")
                        .HasForeignKey("WalletOutgoingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WalletIncoming");

                    b.Navigation("WalletOutgoing");
                });

            modelBuilder.Entity("Kata.Wallet.Domain.Wallet", b =>
                {
                    b.Navigation("IncomingTransactions");

                    b.Navigation("OutgoingTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
